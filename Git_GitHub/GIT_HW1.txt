GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. Напротив каждого действия - напишите команду в GitBash

JSON
 4. Создать внешний репозиторий c названием JSON.		1.На GitHub в верхнем правом углу на любой странице, нажать + и открыть дроп-даун 
								меню,выбрать "New repository"
								2. Назвать репозиторий JSON
								3. Нажать "Create repository"
===================================================================================================
 5. Клонировать репозиторий JSON на локальный компьютер.	1. Зайти в папку, где будет храниться локальный репозиторий
								2. Открыть Terminal GitBush
								3. Ввести команду git clone и вставить HTTPS ссылку на внешний репозиторий.
===================================================================================================
 6. Внутри локального JSON создать файл “new.json”.		touch new.json
===================================================================================================
 7. Добавить файл под гит.					git add .
===================================================================================================
 8. Закоммитить файл.						git commit -m "Create file new.json"
===================================================================================================
 9. Отправить файл на внешний GitHub репозиторий.		git push
===================================================================================================
 10. Отредактировать содержание файла “new.json” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате JSON.							
								1. vim new.json
								2. нажать i (insert) для редактирования
								3. 	{		
									"name": "Kate",
									"surname": "Filippova",
									"age": 27,
									"number_of_pets": 2,
									"salary_after_2_years": 2000
									}
								4. Нажать esc, :wq ,enter для сохранения и выхода из документа
===================================================================================================
 11. Отправить изменения на внешний репозиторий.		git commit -am "Edit new.json"
								git push
===================================================================================================								
 12. Создать файл preferences.json				touch preferences.json
===================================================================================================
 13. В файл preferences.json добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) 
в формате JSON.
								1. vim preferences.json
								2. нажать i (insert) для редактирования
								3.	{
									"favourite_movie": "Snatch",
									"favourite_serial": "Breaking Bad",
									"favourite_food": "Pizza",
									"favourite_season": "Summer",
									"country_would_like_to_visit": "New Zealand"
									}
								4. Нажать esc, :wq ,enter для сохранения и выхода из документа
===================================================================================================
 14. Создать файл sklls.json добавить информацию о скиллах,	
 которые будут изучены на курсе в формате JSON			1. vim skills.json
								2. нажать i (insert) для редактирования
								3.	{
									"skills_on_qa_course": [
									"GIT", 
									"Linux_Terminal", 
									"Postman",
									"SQL",
									"Devtools",
									"Charles_proxy",
									"Fiddler",
									"Jmeter",
									"Jira",
									"Mobile_testing",
									"ADB",
									"Python",
									"Test_artifacts",
									"Theory_of_testing" 
									]
									}
								4. Нажать esc, :wq ,enter для сохранения и выхода из документа	
===================================================================================================	
 15. Отправить сразу 2 файла на внешний репозиторий.		git add preferences.json skills.json
								git commit -m "Create files"
								git push	
===================================================================================================	
 16. На веб интерфейсе создать файл bug_report.json. 		1. На веб-интерфейсе на странице репозитория нажать кнопку "Add File"
								2. В дроп-дауне выбрать "Create new file"
								3. Ввести название файла bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	4. Для сохранения нажать "Commit new file"
===================================================================================================	
 18. На веб интерфейсе модифицировать файл bug_report.json, 			
добавить баг репорт в формате JSON.				1. На веб-интерфейсе открыть файл "bug_report.json"
								2. Нажать на значок "карандаш" (edit this file)
===================================================================================================
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	Нажать на кнопку "Commit changes"
===================================================================================================
 20. Синхронизировать внешний и локальный репозиторий JSON	git pull
===================================================================================================

XML

 21. Создать внешний репозиторий c названием XML.		1.На GitHub в верхнем правом углу на любой странице, нажать + и открыть дроп-даун 
								меню,выбрать "New repository"
								2. Назвать репозиторий XML
								3. Нажать "Create repository"
===================================================================================================
 22. Клонировать репозиторий XML на локальный компьютер.	1. Зайти в папку, где будет храниться локальный репозиторий
								2. Открыть Terminal GitBush
								3. Ввести команду git clone и вставить HTTPS ссылку на внешний репозиторий.
===================================================================================================
 23. Внутри локального XML создать файл “new.xml”.		touch new.xml
===================================================================================================
 24. Добавить файл под гит.					git add .
===================================================================================================
 25. Закоммитить файл.						git commit -m "Create new.xml"
===================================================================================================
 26. Отправить файл на внешний GitHub репозиторий.		git push
===================================================================================================
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате XML.							1. vim new.xml
										2. нажать i (insert) для редактирования
										<?xml version="1.0"?>
										<about_me>
											<name>Kate</name>
											<surname>Filippova</surname>
											<age>27</age>
											<number_of_pets>2</number_of_pets>
											<salary_after_2_years>2000</salary_after_2_years>
										</about_me>
										3. Нажать esc, :wq ,enter для сохранения и выхода из документа
===================================================================================================
 28. Отправить изменения на внешний репозиторий.				git commit -am "Edit new.xml"
										git push
===================================================================================================
 29. Создать файл preferences.xml						touch preferences.xml	
===================================================================================================
 30. В файл preferences.xml добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, 
любимое время года, сторона которую хотели бы посетить) в формате XML.		1. vim new.xml
										2. нажать i (insert) для редактирования
										<?xml version="1.0"?>
										<about_my_favourites_things>
											<favourite_movie>Snatch</favourite_movie>
											<favourite_serial>Breaking Bad</favourite_serial>
											<favourite_food>Pizza</favourite_food>
											<country_would_like_to_visit>New Zealand</country_would_like_to_visit>
										</about_my_favourites_things>
										3. Нажать esc, :wq ,enter для сохранения и выхода из документа
===================================================================================================	 				
 31. Создать файл sklls.xml добавить информацию о скиллах, 
которые будут изучены на курсе в формате XML					1. touch sklls.xml
										2. vim sklls.xml
										3. нажать i (insert) для редактирования
										<?xml version="1.0"?>
										<skills_on_qa_course>
											<skill id="1">GIT</skill>
											<skill id="2">Terminal Linux</skill>
											<skill id="3">Postman</skill>
											<skill id="4">SQL</skill>
											<skill id="5">Devtools</skill>
											<skill id="6">Charles proxy</skill>
											<skill id="7">Fiddler</skill>
											<skill id="8">Jmeter</skill>
											<skill id="9">Jira</skill>
											<skill id="10">Mobile testing</skill>
											<skill id="11">ADB</skill>
											<skill id="12">Python</skill>
											<skill id="13">Test artifacts</skill>
											<skill id="14">Theory of testing</skill>
										</skills_on_qa_course>
										4. Нажать esc, :wq ,enter для сохранения и выхода из документа
===================================================================================================
 32. Сделать коммит в одну строку.						git commit -am "Create xml files"
===================================================================================================
 33. Отправить сразу 2 файла на внешний репозиторий.				git push
===================================================================================================
 34. На веб интерфейсе создать файл bug_report.xml.				1. На веб-интерфейсе на странице репозитория нажать кнопку "Add File"
										2. В дроп-дауне выбрать "Create new file"
										3. Ввести название файла bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.		4. Для сохранения нажать "Commit new file"
===================================================================================================
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.	1. На веб-интерфейсе открыть файл "bug_report.xml"
												2. Нажать на значок "карандаш" (edit this file)
===================================================================================================
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.				Нажать на кнопку "Commit changes"
===================================================================================================
 38. Синхронизировать внешний и локальный репозиторий XML					git pull
